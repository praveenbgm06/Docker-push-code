name: Build and Publish image to Docker Hub

run-name: ${{ github.actor }} is testing out GitHub Actions 

on:
  push:
    branches:
      - main
    ##paths:
    ##  - 'api/Dockerfile'
    ##  - 'front-end-nextjs/Dockerfile'

jobs:
  publish_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: praveenbgm06670
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker meta for backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: praveenbgm06670/docker-backend
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest

      - name: Set up Docker meta for frontend
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: praveenbgm06670/docker-frontend
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest

      - name: Fetch latest version from Docker Hub (Backend)
        id: fetch_backend_version
        run: |
          latest_version=$(curl -s https://hub.docker.com/v2/repositories/praveenbgm06670/docker-backend/tags | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          echo "Latest backend version: $latest_version"
          if [ -z "$latest_version" ]; then
            new_version="1.0.0"
          else
            IFS='.' read -r major minor patch <<< "$latest_version"
            new_version="$major.$minor.$((patch + 1))"
          fi
          echo "New backend version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Fetch latest version from Docker Hub (Frontend)
        id: fetch_frontend_version
        run: |
          latest_version=$(curl -s https://hub.docker.com/v2/repositories/praveenbgm06670/docker-frontend/tags | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          echo "Latest frontend version: $latest_version"
          if [ -z "$latest_version" ]; then
            new_version="1.0.0"
          else
            IFS='.' read -r major minor patch <<< "$latest_version"
            new_version="$major.$minor.$((patch + 1))"
          fi
          echo "New frontend version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Build and push backend image
        run: |
          if [ "$new_version" != "$latest_version" ]; then
            echo "Building and pushing backend image with version $new_version..."
            docker build ./api/ -t praveenbgm06670/docker-backend:latest -t praveenbgm06670/docker-backend:$new_version
            docker push praveenbgm06670/docker-backend:latest
            docker push praveenbgm06670/docker-backend:$new_version
          else
            echo "Backend image with version $new_version already exists. Skipping push."
          fi

      - name: Build and push frontend image
        run: |
          if [ "$new_version" != "$latest_version" ]; then
            echo "Building and pushing frontend image with version $new_version..."
            docker build ./front-end-nextjs/ -t praveenbgm06670/docker-frontend:latest -t praveenbgm06670/docker-frontend:$new_version
            docker push praveenbgm06670/docker-frontend:latest
            docker push praveenbgm06670/docker-frontend:$new_version
          else
            echo "Frontend image with version $new_version already exists. Skipping push."
          fi